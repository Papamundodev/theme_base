/* ------- Table component ------- */

@mixin grid-table-2-columns {
  // mobile
  display: flex;
  flex-direction: column;
  border-block-end: 3px solid var(--gray-color);
  gap: $spacer-md;
  align-items: center;
  justify-content: space-around;
  padding-block: 1em;
  &:first-child {
    padding-inline: $spacer-md;
  }

  @media (width >= $breakpoint-sm) {
    display: grid;
    grid-template-columns: minmax(180px, auto) 1fr;
    grid-template-rows: 120px;
    gap: 0;
    padding-block: 0;
    & > *:first-child {
      grid-template-rows: 50px;
      display: flex;
      align-items: center;
    }
    & > *:not(:first-child) {
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }
}

/* ------- Flex-col-3-------- */

@mixin card {
  & > * {
    @include flex-column-center;
    gap: $spacer-md;
    margin-inline: auto;
    & > * {
      padding: $spacer-md;
    }
  }
}

@mixin card-border-radius($key) {
  border-radius: map-get($border-radius, $key);
  border: 3px solid var(--gray-color);
  background-color: var(--accent-color);
  width: 100px;
  height: 100px;
  min-width: 100px;
  min-height: 100px;
}

@mixin flex-col-3 {
  .flex-auto {
    display: flex;
    flex-direction: column;
    gap: $spacer-md;
    & > * {
      @content;
      & > * {
        margin-bottom: $spacer-md;
      }
    }
  }
  @each $key, $value in $breakpoints {
    @media (width >= $value) and (width >= $breakpoint-sm) {
      .flex-auto {
        width: clamp(
          calc(375px - ($border-padding-inline)),
          calc($value - ($border-padding-inline)),
          calc(1200px - ($border-padding-inline))
        );
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        gap: 5%;
        padding-block: 0;
        & > * {
          width: 30%;

          @content;
          & > * {
            margin-bottom: calc(($value - $border-padding-inline) * 0.05);
            @media (width >= 1200px) {
              margin-bottom: calc((1200px - $border-padding-inline) * 0.05);
            }
          }
        }
      }
    }
  }
}

@mixin flex-col-3-demo {
  .flex-auto {
    display: flex;
    flex-direction: column;
    gap: $spacer-md;
    & > * {
      @include flex-center;
      $i: 1;
      @each $key, $value in $border-radius {
        &:nth-child(#{$i}) > * {
          background-color: var(--accent-color);
          @include card-border-radius($key);
        }
        $i: $i + 1;
      }
      & > * {
        margin-bottom: $spacer-md;
      }
    }
  }
  @each $key, $value in $breakpoints {
    @media (width >= $value) and (width >= $breakpoint-sm) {
      .flex-auto {
        width: clamp(
          calc(375px - ($border-padding-inline)),
          calc($value - ($border-padding-inline)),
          calc(1200px - ($border-padding-inline))
        );

        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        gap: 5%;
        padding-block: 0;
        & > * {
          width: 30%;
          & > * {
            margin-bottom: calc(($value - $border-padding-inline) * 0.05);
            @media (width >= 1200px) {
              margin-bottom: calc((1200px - $border-padding-inline) * 0.05);
            }
          }
        }
      }
    }
  }
}

@mixin table-component {
  .grid-table {
    @include grid-table-2-columns;
    &:last-child {
      border-block-end: 0;
    }
  }
}
/* ------- Design System ------- */

.design-system {
  .page-title {
    font-size: $font-size-xxl;
    color: var(--accent-color);
    margin-bottom: $spacer-md;
    text-align: center;
  }

  .design-system-header {
    padding-inline: $spacer-sm;
    padding-block: $spacer-sm;
    width: 100%;
  }

  .table-component {
    padding-block: 0;
    @include table-component;
  }

  .flex-col-3 {
    padding-block: 0;
    .design-system-header {
      margin-bottom: $spacer-md;
    }
    @include flex-col-3 {
      @include card;
    }
  }

  .border-radius-system {
    .design-system-header {
      margin-bottom: $spacer-md;
    }
    @include flex-col-3-demo;
  }
}
