/* Colors */
:root {
  --color-scheme: light dark;
  --pourcentage: 40%;
  --white-color: #f4fafd;
  --black-color: #040b14;
  --background-color: var(--white-color);
  --contrast-color: var(--white-color);
  --default-color: var(--black-color);
  --heading-color: color-mix(
    in srgb,
    var(--default-color),
    var(--accent-color) var(--pourcentage)
  );
  --accent-color: #461e64;
  --accent-color-2: #ce4e57;
  --accent-color-3: #920e4a;
  --accent-color-4: #7a388c;
  --accent-color-5: #68c0c2;
  --surface-color: color-mix(
    in srgb,
    var(--background-color),
    var(--accent-color) 10%
  );
  --surface-color-2: color-mix(
    in srgb,
    var(--background-color),
    var(--accent-color) 30%
  );
  --surface-color-3: color-mix(
    in srgb,
    var(--background-color),
    var(--accent-color) 50%
  );
  --surface-color-4: color-mix(
    in srgb,
    var(--background-color),
    var(--accent-color) 70%
  );
  --gray-color: #3b4142;
}

.dark-theme {
  --accent-color: #68c0c2;
  --accent-color-2: #ce4e57;
  --accent-color-3: #920e4a;
  --accent-color-4: #7a388c;
  --accent-color-5: #461e64;
  --background-color: var(--black-color);
  --default-color: var(--white-color);
  --contrast-color: var(--black-color);
  --heading-color: color-mix(
    in srgb,
    var(--default-color),
    var(--accent-color) var(--pourcentage)
  );
  --surface-color: color-mix(
    in srgb,
    var(--background-color),
    var(--accent-color) 10%
  );
  --surface-color-2: color-mix(
    in srgb,
    var(--background-color),
    var(--accent-color) 30%
  );
  --surface-color-3: color-mix(
    in srgb,
    var(--background-color),
    var(--accent-color) 50%
  );
  --surface-color-4: color-mix(
    in srgb,
    var(--background-color),
    var(--accent-color) 70%
  );
}

:root {
  --header-height: 85px;
  --icon-size: 1em;
  --spacer: 1em;
}

body {
  margin: 0;
  background-color: var(--background-color);
  color: var(--default-color);
}

ul {
  list-style: none;
  padding: 0;
  margin: 0;
  & > li.active {
    & > a {
      color: var(--accent-color-4);
    }
  }
}

a,
.nav-link {
  text-decoration: none;
  color: var(--default-color);
  &:hover {
    color: var(--accent-color-2);
    cursor: pointer;
  }
}

.separator {
  margin-inline: 0.5em;
  font-size: 0.8rem;
}

header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: var(--header-height);
  background-color: var(--background-color);
  position: fixed;
  padding-inline: 1em;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100;
  .wrapper-header-right-content {
    display: flex;
    align-items: center;
    gap: 1em;
  }
}

.wrapper-navbar {
  .navmenu {
    border: none;
  }
}

main {
  margin-top: var(--header-height);
}

footer {
  margin-bottom: var(--header-height);
  text-align: center;
}

#breadcrumbs {
  ul {
    display: flex;
    align-items: center;
  }
}

.post-date {
  display: flex;
  align-items: center;
}
.post-full {
  img {
    width: 100%;
    height: auto;
  }
}

.content {
  img {
    width: 100%;
    height: auto;
  }
}

/* Design System */

/* ------- IMG  ------- */
$icon-sm: 24px;
$icon-md: 32px;
$icon-lg: 48px;
$logo-sm: 80px;
$logo: 100px;
$full: 100%;

$img-sizes: (
  "icon-sm": 24px,
  "icon-md": 32px,
  "icon-lg": 48px,
  "logo-sm": 60px,
  "logo-md": 80px,
  "logo-lg": 100px,
  "full": 100%,
);

/* ------- border-radius ------- */
$border-radius-sharp: 0.02em;
$border-radius-sm: 3px;
$border-radius-md: 5px;
$border-radius-rounded: 10px;
$border-radius-pill: 999px;
$border-radius-circle: 50%;
$border-radius-retro: 10px 20px 30px 40px;

$border-radius: (
  "sharp": $border-radius-sharp,
  "sm": $border-radius-sm,
  "md": $border-radius-md,
  "rounded": $border-radius-rounded,
  "pill": $border-radius-pill,
  "circle": $border-radius-circle,
  "retro": $border-radius-retro,
);

/* ------- Breakpoint ------- */
$breakpoint-xs: 375px;
$breakpoint-sm: 576px;
$breakpoint-md: 768px;
$breakpoint-lg: 992px;
$breakpoint-xl: 1200px;
$breakpoint-xxl: 1400px;

$breakpoints: (
  "xs": $breakpoint-xs,
  "sm": $breakpoint-sm,
  "md": $breakpoint-md,
  "lg": $breakpoint-lg,
  "xl": $breakpoint-xl,
  "xxl": $breakpoint-xxl,
);

/* ------- Spacer ------- */
$spacer-xs: 0.25em;
$spacer-sm: 0.5em;
$spacer-md: 1em;
$spacer-lg: 1.5em;
$spacer-xl: 2em;
$spacer-xxl: 150px;

$spacers: (
  "xs": $spacer-xs,
  "sm": $spacer-sm,
  "md": $spacer-md,
  "lg": $spacer-lg,
  "xl": $spacer-xl,
);

@each $key, $value in $spacers {
  .gap-#{$key} {
    gap: $value;
  }
}

/* ------- Wrapper ------- */

$wrapper-border-inline: 3px;
$wrapper-padding-inline: $spacer-md;
$border-padding-inline: calc(
  ($wrapper-border-inline + $wrapper-padding-inline) * 2
);

@media (width >= $breakpoint-sm) {
  .wrapper {
    border-inline: $wrapper-border-inline solid var(--gray-color);
    padding-inline: $wrapper-padding-inline;
  }
}

/* ------- Container ------- */

@mixin container() {
  @each $key, $value in $breakpoints {
    @media (width <= $breakpoint-sm) {
      width: 100%;
    }
    @media (width >= $value) {
      width: calc($value - $spacer-sm);
    }
  }
}

.container {
  max-width: 1200px;
  margin-inline: auto;
  @include container;
}

/* ------- IMG  ------- */

@mixin image($br: "rounded") {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  aspect-ratio: 1/1;
  border-radius: map-get($border-radius, $br);
}

@each $key, $value in $img-sizes {
  .img-container-#{$key} {
    width: $value;
    height: $value;
    & > * {
      @include flex-center;
      img {
        @include image("circle");
      }
    }
  }
}

/* ------- Font-size  ------- */
$font-size-sm: clamp(0.7rem, 1.5vw, 1.3rem);
$font-size-md: clamp(1.2rem, 2vw, 2rem);
$font-size-lg: clamp(1.5rem, 3vw, 2.7rem);
$font-size-xl: clamp(2rem, 4vw, 3.5rem);
$font-size-xxl: clamp(2.5rem, 5vw, 4rem);

$font-sizes: (
  "sm": clamp(0.7rem, 1.5vw, 1.3rem),
  "md": clamp(1.2rem, 2vw, 2rem),
  "lg": clamp(1.5rem, 3vw, 2.7rem),
  "xl": clamp(2rem, 4vw, 3.5rem),
  "xxl": clamp(2.5rem, 5vw, 4rem),
);

@each $key, $value in $font-sizes {
  .fs-#{$key} {
    font-size: $value;
  }
}

/* ------- Colors ------- */

/*
TODO find logic for bg color
*/
.bg-gray-color {
  color: var(--white-color);
}

$colors: (
  "background-color": var(--background-color),
  "contrast-color": var(--contrast-color),
  "default-color": var(--default-color),
  "heading-color": var(--heading-color),
  "accent-color": var(--accent-color),
  "accent-color-2": var(--accent-color-2),
  "accent-color-3": var(--accent-color-3),
  "accent-color-4": var(--accent-color-4),
  "accent-color-5": var(--accent-color-5),
  "surface-color": var(--surface-color),
  "surface-color-2": var(--surface-color-2),
  "surface-color-3": var(--surface-color-3),
  "surface-color-4": var(--surface-color-4),
  "gray-color": var(--gray-color),
);

@each $key, $value in $colors {
  .#{$key} {
    color: $value;
  }
}
@each $key, $value in $colors {
  .bg-#{$key} {
    background-color: $value;
  }
}
